<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yoooho.mall.mapper.OmsOrderRefundMapper">
  <resultMap id="BaseResultMap" type="com.yoooho.mall.model.OmsOrderRefund">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="member_username" jdbcType="VARCHAR" property="memberUsername" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="return_amount" jdbcType="DECIMAL" property="returnAmount" />
    <result column="handle_man" jdbcType="VARCHAR" property="handleMan" />
    <result column="handle_id" jdbcType="BIGINT" property="handleId" />
    <result column="refund_sn" jdbcType="VARCHAR" property="refundSn" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="refund_mode" jdbcType="INTEGER" property="refundMode" />
    <result column="refund_route" jdbcType="INTEGER" property="refundRoute" />
    <result column="out_refund_no" jdbcType="VARCHAR" property="outRefundNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, order_sn, create_time, member_username, `status`, handle_time, reason, 
    return_amount, handle_man, handle_id, refund_sn, member_id, refund_mode, refund_route, 
    out_refund_no
  </sql>
  <select id="selectByExample" parameterType="com.yoooho.mall.model.OmsOrderRefundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oms_order_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oms_order_refund
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from oms_order_refund
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoooho.mall.model.OmsOrderRefundExample">
    delete from oms_order_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoooho.mall.model.OmsOrderRefund">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order_refund (order_id, order_sn, create_time, 
      member_username, `status`, handle_time, 
      reason, return_amount, handle_man, 
      handle_id, refund_sn, member_id, 
      refund_mode, refund_route, out_refund_no
      )
    values (#{orderId,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{memberUsername,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{handleTime,jdbcType=TIMESTAMP}, 
      #{reason,jdbcType=VARCHAR}, #{returnAmount,jdbcType=DECIMAL}, #{handleMan,jdbcType=VARCHAR}, 
      #{handleId,jdbcType=BIGINT}, #{refundSn,jdbcType=VARCHAR}, #{memberId,jdbcType=BIGINT}, 
      #{refundMode,jdbcType=INTEGER}, #{refundRoute,jdbcType=INTEGER}, #{outRefundNo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yoooho.mall.model.OmsOrderRefund">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="memberUsername != null">
        member_username,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="returnAmount != null">
        return_amount,
      </if>
      <if test="handleMan != null">
        handle_man,
      </if>
      <if test="handleId != null">
        handle_id,
      </if>
      <if test="refundSn != null">
        refund_sn,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="refundMode != null">
        refund_mode,
      </if>
      <if test="refundRoute != null">
        refund_route,
      </if>
      <if test="outRefundNo != null">
        out_refund_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberUsername != null">
        #{memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="returnAmount != null">
        #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="handleMan != null">
        #{handleMan,jdbcType=VARCHAR},
      </if>
      <if test="handleId != null">
        #{handleId,jdbcType=BIGINT},
      </if>
      <if test="refundSn != null">
        #{refundSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="refundMode != null">
        #{refundMode,jdbcType=INTEGER},
      </if>
      <if test="refundRoute != null">
        #{refundRoute,jdbcType=INTEGER},
      </if>
      <if test="outRefundNo != null">
        #{outRefundNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoooho.mall.model.OmsOrderRefundExample" resultType="java.lang.Long">
    select count(*) from oms_order_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oms_order_refund
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memberUsername != null">
        member_username = #{record.memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.handleTime != null">
        handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.returnAmount != null">
        return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.handleMan != null">
        handle_man = #{record.handleMan,jdbcType=VARCHAR},
      </if>
      <if test="record.handleId != null">
        handle_id = #{record.handleId,jdbcType=BIGINT},
      </if>
      <if test="record.refundSn != null">
        refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.refundMode != null">
        refund_mode = #{record.refundMode,jdbcType=INTEGER},
      </if>
      <if test="record.refundRoute != null">
        refund_route = #{record.refundRoute,jdbcType=INTEGER},
      </if>
      <if test="record.outRefundNo != null">
        out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oms_order_refund
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      member_username = #{record.memberUsername,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      reason = #{record.reason,jdbcType=VARCHAR},
      return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      handle_man = #{record.handleMan,jdbcType=VARCHAR},
      handle_id = #{record.handleId,jdbcType=BIGINT},
      refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=BIGINT},
      refund_mode = #{record.refundMode,jdbcType=INTEGER},
      refund_route = #{record.refundRoute,jdbcType=INTEGER},
      out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoooho.mall.model.OmsOrderRefund">
    update oms_order_refund
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberUsername != null">
        member_username = #{memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="handleTime != null">
        handle_time = #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="returnAmount != null">
        return_amount = #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="handleMan != null">
        handle_man = #{handleMan,jdbcType=VARCHAR},
      </if>
      <if test="handleId != null">
        handle_id = #{handleId,jdbcType=BIGINT},
      </if>
      <if test="refundSn != null">
        refund_sn = #{refundSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="refundMode != null">
        refund_mode = #{refundMode,jdbcType=INTEGER},
      </if>
      <if test="refundRoute != null">
        refund_route = #{refundRoute,jdbcType=INTEGER},
      </if>
      <if test="outRefundNo != null">
        out_refund_no = #{outRefundNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoooho.mall.model.OmsOrderRefund">
    update oms_order_refund
    set order_id = #{orderId,jdbcType=BIGINT},
      order_sn = #{orderSn,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      member_username = #{memberUsername,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      handle_time = #{handleTime,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      return_amount = #{returnAmount,jdbcType=DECIMAL},
      handle_man = #{handleMan,jdbcType=VARCHAR},
      handle_id = #{handleId,jdbcType=BIGINT},
      refund_sn = #{refundSn,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=BIGINT},
      refund_mode = #{refundMode,jdbcType=INTEGER},
      refund_route = #{refundRoute,jdbcType=INTEGER},
      out_refund_no = #{outRefundNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>