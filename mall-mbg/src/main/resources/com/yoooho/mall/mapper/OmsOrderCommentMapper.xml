<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yoooho.mall.mapper.OmsOrderCommentMapper">
  <resultMap id="BaseResultMap" type="com.yoooho.mall.model.OmsOrderComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="oid" jdbcType="BIGINT" property="oid" />
    <result column="unique" jdbcType="VARCHAR" property="unique" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="reply_type" jdbcType="INTEGER" property="replyType" />
    <result column="product_score" jdbcType="BIT" property="productScore" />
    <result column="service_score" jdbcType="BIT" property="serviceScore" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="merchant_reply_content" jdbcType="VARCHAR" property="merchantReplyContent" />
    <result column="merchant_reply_time" jdbcType="TIMESTAMP" property="merchantReplyTime" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
    <result column="is_reply" jdbcType="BIT" property="isReply" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yoooho.mall.model.OmsOrderComment">
    <result column="pics" jdbcType="LONGVARCHAR" property="pics" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `uid`, oid, `unique`, product_id, reply_type, product_score, service_score, `comment`, 
    add_time, merchant_reply_content, merchant_reply_time, is_del, is_reply
  </sql>
  <sql id="Blob_Column_List">
    pics
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yoooho.mall.model.OmsOrderCommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oms_order_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yoooho.mall.model.OmsOrderCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oms_order_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oms_order_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from oms_order_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoooho.mall.model.OmsOrderCommentExample">
    delete from oms_order_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoooho.mall.model.OmsOrderComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order_comment (`uid`, oid, `unique`, 
      product_id, reply_type, product_score, 
      service_score, `comment`, add_time, 
      merchant_reply_content, merchant_reply_time, 
      is_del, is_reply, pics)
    values (#{uid,jdbcType=BIGINT}, #{oid,jdbcType=BIGINT}, #{unique,jdbcType=VARCHAR}, 
      #{productId,jdbcType=BIGINT}, #{replyType,jdbcType=INTEGER}, #{productScore,jdbcType=BIT}, 
      #{serviceScore,jdbcType=BIT}, #{comment,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{merchantReplyContent,jdbcType=VARCHAR}, #{merchantReplyTime,jdbcType=TIMESTAMP}, 
      #{isDel,jdbcType=BIT}, #{isReply,jdbcType=BIT}, #{pics,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yoooho.mall.model.OmsOrderComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="oid != null">
        oid,
      </if>
      <if test="unique != null">
        `unique`,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="replyType != null">
        reply_type,
      </if>
      <if test="productScore != null">
        product_score,
      </if>
      <if test="serviceScore != null">
        service_score,
      </if>
      <if test="comment != null">
        `comment`,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="merchantReplyContent != null">
        merchant_reply_content,
      </if>
      <if test="merchantReplyTime != null">
        merchant_reply_time,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="isReply != null">
        is_reply,
      </if>
      <if test="pics != null">
        pics,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=BIGINT},
      </if>
      <if test="unique != null">
        #{unique,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="replyType != null">
        #{replyType,jdbcType=INTEGER},
      </if>
      <if test="productScore != null">
        #{productScore,jdbcType=BIT},
      </if>
      <if test="serviceScore != null">
        #{serviceScore,jdbcType=BIT},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="merchantReplyContent != null">
        #{merchantReplyContent,jdbcType=VARCHAR},
      </if>
      <if test="merchantReplyTime != null">
        #{merchantReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
      <if test="isReply != null">
        #{isReply,jdbcType=BIT},
      </if>
      <if test="pics != null">
        #{pics,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoooho.mall.model.OmsOrderCommentExample" resultType="java.lang.Long">
    select count(*) from oms_order_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oms_order_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=BIGINT},
      </if>
      <if test="record.unique != null">
        `unique` = #{record.unique,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.replyType != null">
        reply_type = #{record.replyType,jdbcType=INTEGER},
      </if>
      <if test="record.productScore != null">
        product_score = #{record.productScore,jdbcType=BIT},
      </if>
      <if test="record.serviceScore != null">
        service_score = #{record.serviceScore,jdbcType=BIT},
      </if>
      <if test="record.comment != null">
        `comment` = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.merchantReplyContent != null">
        merchant_reply_content = #{record.merchantReplyContent,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantReplyTime != null">
        merchant_reply_time = #{record.merchantReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
      <if test="record.isReply != null">
        is_reply = #{record.isReply,jdbcType=BIT},
      </if>
      <if test="record.pics != null">
        pics = #{record.pics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update oms_order_comment
    set id = #{record.id,jdbcType=BIGINT},
      `uid` = #{record.uid,jdbcType=BIGINT},
      oid = #{record.oid,jdbcType=BIGINT},
      `unique` = #{record.unique,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=BIGINT},
      reply_type = #{record.replyType,jdbcType=INTEGER},
      product_score = #{record.productScore,jdbcType=BIT},
      service_score = #{record.serviceScore,jdbcType=BIT},
      `comment` = #{record.comment,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      merchant_reply_content = #{record.merchantReplyContent,jdbcType=VARCHAR},
      merchant_reply_time = #{record.merchantReplyTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=BIT},
      is_reply = #{record.isReply,jdbcType=BIT},
      pics = #{record.pics,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oms_order_comment
    set id = #{record.id,jdbcType=BIGINT},
      `uid` = #{record.uid,jdbcType=BIGINT},
      oid = #{record.oid,jdbcType=BIGINT},
      `unique` = #{record.unique,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=BIGINT},
      reply_type = #{record.replyType,jdbcType=INTEGER},
      product_score = #{record.productScore,jdbcType=BIT},
      service_score = #{record.serviceScore,jdbcType=BIT},
      `comment` = #{record.comment,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      merchant_reply_content = #{record.merchantReplyContent,jdbcType=VARCHAR},
      merchant_reply_time = #{record.merchantReplyTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=BIT},
      is_reply = #{record.isReply,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoooho.mall.model.OmsOrderComment">
    update oms_order_comment
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=BIGINT},
      </if>
      <if test="oid != null">
        oid = #{oid,jdbcType=BIGINT},
      </if>
      <if test="unique != null">
        `unique` = #{unique,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="replyType != null">
        reply_type = #{replyType,jdbcType=INTEGER},
      </if>
      <if test="productScore != null">
        product_score = #{productScore,jdbcType=BIT},
      </if>
      <if test="serviceScore != null">
        service_score = #{serviceScore,jdbcType=BIT},
      </if>
      <if test="comment != null">
        `comment` = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="merchantReplyContent != null">
        merchant_reply_content = #{merchantReplyContent,jdbcType=VARCHAR},
      </if>
      <if test="merchantReplyTime != null">
        merchant_reply_time = #{merchantReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
      <if test="isReply != null">
        is_reply = #{isReply,jdbcType=BIT},
      </if>
      <if test="pics != null">
        pics = #{pics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yoooho.mall.model.OmsOrderComment">
    update oms_order_comment
    set `uid` = #{uid,jdbcType=BIGINT},
      oid = #{oid,jdbcType=BIGINT},
      `unique` = #{unique,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=BIGINT},
      reply_type = #{replyType,jdbcType=INTEGER},
      product_score = #{productScore,jdbcType=BIT},
      service_score = #{serviceScore,jdbcType=BIT},
      `comment` = #{comment,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      merchant_reply_content = #{merchantReplyContent,jdbcType=VARCHAR},
      merchant_reply_time = #{merchantReplyTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT},
      is_reply = #{isReply,jdbcType=BIT},
      pics = #{pics,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoooho.mall.model.OmsOrderComment">
    update oms_order_comment
    set `uid` = #{uid,jdbcType=BIGINT},
      oid = #{oid,jdbcType=BIGINT},
      `unique` = #{unique,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=BIGINT},
      reply_type = #{replyType,jdbcType=INTEGER},
      product_score = #{productScore,jdbcType=BIT},
      service_score = #{serviceScore,jdbcType=BIT},
      `comment` = #{comment,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      merchant_reply_content = #{merchantReplyContent,jdbcType=VARCHAR},
      merchant_reply_time = #{merchantReplyTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT},
      is_reply = #{isReply,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>